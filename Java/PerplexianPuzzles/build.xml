<?xml version="1.0" encoding="UTF-8" ?>
<project name="PerplexianPuzzles" basedir="." default="deploy">

<!--      <taskdef name="list" classname="org.apache.catalina.ant.ListTask"/>
      <taskdef name="install" classname="org.apache.catalina.ant.InstallTask"/>
      <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"/>
      <taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask"/>
      <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"/>
      <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"/> -->

      <!-- Property file -->
      <property file="build.properties"/>

      <!-- Project settings -->
      <property name="project.title" value="Perplexian Puzzles"/>
      <property name="project.distname" value="perplexian_puzzles"/>
      <property name="project.version" value="1.0"/>

      <!-- Path settings -->
      <property name="doc.path" value="./doc/api"/>
      <property name="doc.src" value="./src/java"/>

      <!-- classpath for Struts 1.1 -->
      <path id="classpath">
      		<pathelement path="${project.path}/web/WEB-INF/lib/commons-lang-2.4.jar"/>
            <pathelement path="${project.path}/web/WEB-INF/lib/struts.jar"/>
            <pathelement path="${project.path}/web/WEB-INF/lib/log4j-1.2.15.jar"/>
        	<pathelement path="${project.path}/web/WEB-INF/lib/torque-3.3.jar"/>
      	<!-- <pathelement path="${tomcat.home}/common/lib/servlet-api.jar"/>
           <pathelement path="${project.path}/web/WEB-INF/lib/catalina.jar"/>
            <pathelement path="classes"/>-->
      </path>

      <!-- Remove classes directory for clean build -->
      <target name="clean" description="Delete existing build">
            <delete dir="build/"/>
            <delete dir="dist/"/>
      </target>

      <target name="javadoc" description="Generate JavaDoc API docs">
            <delete dir="${doc.path}"/>
            <mkdir dir="${doc.path}"/>
            <javadoc sourcepath="${doc.src}" destdir="${doc.path}" classpath="${servlet.jar}:${jdbc20ext.jar}" packagenames="*" author="true" private="true" version="true" windowtitle="${project.title} API Documentation" doctitle="&lt;h1&gt;${project.title} Documentation (Version ${project.version})&lt;/h1&gt;" bottom="Copyright &#169; 2009">
                  <classpath refid="compile.classpath"/>
            </javadoc>
      </target>

      <target name="build" depends="resources" description="Compile Java files and copy DD and static files.">
            <javac srcdir="src" destdir="build/WEB-INF/classes">
                  <include name="**/*.java"/>
                  <classpath refid="classpath"/>
            </javac>
      </target>

      <!-- WEB TARGETS  -->
 <!--     <target name="install" description="Install web application" depends="build">
            <install url="${url}" username="${username}" password="${password}" path="/${context.path}" war="file://build/"/>
      </target>   

      <target name="reload" description="Reload web application" depends="build">
            <reload url="${url}" username="${username}" password="${password}" path="/${context.path}"/>
      </target>
-->
      <target name="package" description="Packages the WAR file" depends="build">
            <echo message="Creating WAR file..."/>
            <delete file="dist/${war.file}"/>
            <jar jarfile="dist/${war.file}">
                  <fileset dir="build/"/>
            </jar>
      </target>
<!--
      <target name="re-package" description="cleans the build and re-packages the WAR file" depends="clean,package">
            <echo message="Cleaning the build and packaging the WAR...."/>
            <copy todir="dist" overwrite="yes">
                  <fileset dir="dist">
                        <include name="**/*.war"/>
                  </fileset>
            </copy>
      </target>

      <target name="deploy" description="Deploy a Web application" depends="package">
            <deploy url="${url}" username="${username}" password="${password}" path="${webapps.path}/${context.path}" war="file:${project.path}/dist/${war.file}"/>
      </target>

      <target name="undeploy" description="Undeploy web application">
      		<echo message="${url} ${username} ${password}"/>
            <undeploy url="${url}" username="${username}" password="${password}" path="${webapps.path}/${context.path}"/>
      </target>

      <target name="redeploy" description="Remove, Clean, and Re-deploy web application" depends="undeploy,clean,deploy"/>   

      <target name="install-config" description="Install web application" depends="build">
            <install url="${url}" username="${username}" password="${password}" path="${context.path}" config="file:${project.path}/context.xml"/>
      </target>
-->

     <target name="deploy" description="Deploy a Web application" depends="package">
       		<copy todir="${webapps.path}" includeEmptyDirs="no">
               	<fileset dir="dist">
                	<include name="**/*.war"/>
               	</fileset>
       		</copy>
      </target>
	
      <!-- Supporting Targets -->
      <target name="init">
            <tstamp/>
      </target>

      <target name="prepare" depends="init" description="Create build directories.">
            <mkdir dir="build/"/>
            <mkdir dir="dist"/>
            <mkdir dir="build/pages"/>
            <mkdir dir="build/style"/>
            <mkdir dir="build/WEB-INF"/>
            <mkdir dir="build/WEB-INF/classes"/>
            <mkdir dir="build/WEB-INF/lib"/>
            <mkdir dir="build/WEB-INF/tags"/>
            <mkdir dir="build/META-INF/"/>
      </target>

      <!-- Copy any resource or configuration files -->
      <target name="resources" depends="copy">
            <copy todir="build/WEB-INF/classes" includeEmptyDirs="no">
                  <fileset dir="src">
                        <patternset>
                              <include name="**/*.properties"/>
                        </patternset>
                  </fileset>
            </copy>
      </target>

      <target name="copy" depends="prepare" description="Compile app Java files and copy HTML and JSP pages">
            <copy todir="build/">
                  <fileset dir="web">
                        <include name="**/*.html"/>
                        <include name="**/*.jsp"/>
                        <include name="**/*.gif"/>
                  </fileset>
            </copy>

            <copy todir="build/images">
                  <fileset dir="web/images">
                        <include name="**/*.gif"/>
                        <include name="**/*.jpg"/>
                  </fileset>
            </copy>

            <copy todir="build/pages">
                  <fileset dir="web/pages">
                        <include name="**/*.jsp"/>
                        <include name="**/*.html"/>
                        <include name="**/*"/>
                  </fileset>
            </copy>

            <copy todir="build/include">
                  <fileset dir="web/include">
                        <include name="**/*.html"/>
                        <include name="**/*.js"/>
                  </fileset>
            </copy>

	        <copy todir="build/conf">
	               <fileset dir="web/conf">
	                     <include name="**/*.properties"/>
	               </fileset>
	        </copy>

            <copy todir="build/style">
                  <fileset dir="web/style">
                        <include name="**/*.css"/>
                  </fileset>
            </copy>

            <copy todir="build/WEB-INF">
                  <fileset dir="web/WEB-INF">
                        <include name="**/*.xml"/>
                        <include name="**/*.tld"/>
                  </fileset>
            </copy>

            <copy todir="build/WEB-INF/tags">
                  <fileset dir="web">
                        <include name="**/*.tag"/>
                  </fileset>
            </copy>

            <copy todir="build/WEB-INF/tlds">
                  <fileset dir="web/WEB-INF/tlds">
                        <include name="**/*.tld"/>
                  </fileset>

            </copy>

            <copy todir="build/WEB-INF/lib">
                  <fileset dir="web/WEB-INF/lib">
                        <include name="**/*.jar"/>
                  </fileset>
            </copy>
      </target>

      <!-- Normal build of application -->
      <target name="compile" depends="prepare,resources">
        <javac srcdir="src" destdir="classes">
            <classpath refid="compile.classpath"/>
        </javac>
      </target>

      <!-- Build entire project -->
      <target name="project" depends="clean,prepare,compile,javadoc"/>

</project>